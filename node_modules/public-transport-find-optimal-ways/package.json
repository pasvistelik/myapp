{
  "_args": [
    [
      {
        "raw": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
        "spec": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:pasvistelik/public-transport-find-optimal-ways.git",
          "sshUrl": "git+ssh://git@github.com/pasvistelik/public-transport-find-optimal-ways.git",
          "httpsUrl": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
          "gitUrl": "git://github.com/pasvistelik/public-transport-find-optimal-ways.git",
          "shortcut": "github:pasvistelik/public-transport-find-optimal-ways",
          "directUrl": "https://raw.githubusercontent.com/pasvistelik/public-transport-find-optimal-ways/master/package.json"
        }
      },
      "D:\\Files\\Other\\Projects\\PublicTransport\\js-api-server"
    ]
  ],
  "_from": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
  "_id": "public-transport-find-optimal-ways@1.0.7",
  "_inCache": true,
  "_location": "/public-transport-find-optimal-ways",
  "_phantomChildren": {},
  "_requested": {
    "raw": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
    "spec": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:pasvistelik/public-transport-find-optimal-ways.git",
      "sshUrl": "git+ssh://git@github.com/pasvistelik/public-transport-find-optimal-ways.git",
      "httpsUrl": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
      "gitUrl": "git://github.com/pasvistelik/public-transport-find-optimal-ways.git",
      "shortcut": "github:pasvistelik/public-transport-find-optimal-ways",
      "directUrl": "https://raw.githubusercontent.com/pasvistelik/public-transport-find-optimal-ways/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/public-transport-server-code"
  ],
  "_resolved": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git#9ea5e6f17c0bbf7a6ca3eb6dce4796519b748da3",
  "_shasum": "7f185e1727d5f2ed55b456100ff6face7aacbae2",
  "_shrinkwrap": null,
  "_spec": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git",
  "_where": "D:\\Files\\Other\\Projects\\PublicTransport\\js-api-server",
  "author": {
    "name": "Andrey Pasvistelik"
  },
  "bugs": {
    "url": "https://github.com/pasvistelik/public-transport-find-optimal-ways/issues"
  },
  "dependencies": {},
  "description": "Module for finding optimal ways on a public transport.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-regenerator": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-env": "^1.4.0",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-stage-2": "^6.24.1",
    "geo-coords-distance": "^2.0.5"
  },
  "gitHead": "9ea5e6f17c0bbf7a6ca3eb6dce4796519b748da3",
  "homepage": "https://github.com/pasvistelik/public-transport-find-optimal-ways#readme",
  "keywords": [
    "public-transport"
  ],
  "license": "ISC",
  "main": "lib/optimalRoutesCollection.js",
  "name": "public-transport-find-optimal-ways",
  "optionalDependencies": {},
  "readme": "##### Using example:\r\n```javascript\r\nimport initialize from 'public-transport-initialize-data';\r\nimport OptimalRoutesCollection from 'public-transport-find-optimal-ways/lib/optimalRoutesCollection';\r\n\r\ninitialize(allStations, allRoutes, allTimetables); // You are need to initialize data before using this module.\r\n\r\nvar res = new OptimalRoutesCollection(\r\n    allStations, \r\n    {lat: 53.6834599, lng:23.8342648}, // fromPosition\r\n    {lat: 53.92720535, lng: 27.5255677338375}, // toPosition\r\n    45300, // startTime (in seconds: hours*3600+minutes*60+seconds)\r\n    [\"bus\", \"trolleybus\"], // transportTypes\r\n    5, // goingSpeed\r\n    2 // dopTimeMinutes\r\n);\r\n\r\nvar findedOptimalWays = res.getOptimalWays();\r\n```\r\n##### Result example:\r\n```javascript\r\n[\r\n    {\r\n        \"totalTimeSeconds\": 1091,\r\n        \"totalGoingTimeSeconds\": 361,\r\n        \"totalTransportChangingCount\": 1,\r\n        \"points\": [\r\n            {\r\n                \"time\": 0,\r\n                \"station\": null,\r\n                \"route\": null,\r\n                \"coords\": { \"lat\": 53.7082, \"lng\": 23.8029 }\r\n            },\r\n            {\r\n                \"time\": 230,\r\n                \"station\":\r\n                    {\r\n                        \"hashcode\": \"S157A8E43A24\",\r\n                        \"name\": \"улица Врублевского\",\r\n                        \"routes\": null,\r\n                        \"Coords\": { \"lat\": 53.7092, \"lng\": 23.8045 }\r\n                    },\r\n                \"route\": null,\r\n                \"coords\": { \"lat\": 53.7092, \"lng\": 23.8045 }\r\n            },\r\n            {\r\n                \"time\": 491,\r\n                \"station\":\r\n                    {\r\n                        \"hashcode\": \"S157A8E088DD\",\r\n                        \"name\": \"улица Домбровского\",\r\n                        \"routes\": null,\r\n                        \"Coords\": { \"lat\": 53.7065, \"lng\": 23.7956 }\r\n                    },\r\n                \"route\": {\r\n                    \"vehicles\": [],\r\n                    \"gpsTrack\": null,\r\n                    \"hashcode\": \"R158542FE82C\",\r\n                    \"number\": \"28\",\r\n                    \"type\": \"bus\",\r\n                    \"from\": \"Вишневец\",\r\n                    \"to\": \"улица Белые Росы\",\r\n                    \"owner\": \"\",\r\n                    \"stations\": null,\r\n                    \"timetables\": null,\r\n                    \"stationsJSON\": null\r\n                }, \"coords\": { \"lat\": 53.7065, \"lng\": 23.7956 }\r\n            },\r\n            {\r\n                \"time\": 629,\r\n                \"station\":\r\n                    {\r\n                        \"hashcode\": \"S157A8E06B65\",\r\n                        \"name\": \"Гимназия № 5\",\r\n                        \"routes\": null,\r\n                        \"Coords\": { \"lat\": 53.703, \"lng\": 23.7967 }\r\n                    },\r\n                \"route\": {\r\n                    \"vehicles\": [],\r\n                    \"gpsTrack\": null,\r\n                    \"hashcode\": \"R158542FE82C\",\r\n                    \"number\": \"28\", \"type\": \"bus\",\r\n                    \"from\": \"Вишневец\",\r\n                    \"to\": \"улица Белые Росы\",\r\n                    \"owner\": \"\",\r\n                    \"stations\": null,\r\n                    \"timetables\": null,\r\n                    \"stationsJSON\": null\r\n                },\r\n                \"coords\": { \"lat\": 53.703, \"lng\": 23.7967 }\r\n            },\r\n            {\r\n                \"time\": 960,\r\n                \"station\":\r\n                    {\r\n                        \"hashcode\": \"S157A8E0ABC4\",\r\n                        \"name\": \"Форты\",\r\n                        \"routes\": null,\r\n                        \"Coords\": { \"lat\": 53.6956, \"lng\": 23.8007 }\r\n                    },\r\n                \"route\":\r\n                    {\r\n                        \"vehicles\": [],\r\n                        \"gpsTrack\": null,\r\n                        \"hashcode\": \"R158542FE82C\",\r\n                        \"number\": \"28\",\r\n                        \"type\": \"bus\",\r\n                        \"from\": \"Вишневец\",\r\n                        \"to\": \"улица Белые Росы\",\r\n                        \"owner\": \"\",\r\n                        \"stations\": null,\r\n                        \"timetables\": null,\r\n                        \"stationsJSON\": null\r\n                    },\r\n                \"coords\": { \"lat\": 53.6956, \"lng\": 23.8007 }\r\n            },\r\n            {\r\n                \"time\": 1091,\r\n                \"station\": null,\r\n                \"route\": null,\r\n                \"coords\": { \"lat\": 53.6968527, \"lng\": 23.802495 }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"totalTimeSeconds\": 2708,\r\n        \"totalGoingTimeSeconds\": 2708,\r\n        \"totalTransportChangingCount\": 0,\r\n        \"points\": [\r\n            {\r\n                \"time\": 0,\r\n                \"station\": null,\r\n                \"route\": null,\r\n                \"coords\": { \"lat\": 53.7082, \"lng\": 23.8029 }\r\n            },\r\n            {\r\n                \"time\": 2708,\r\n                \"station\": null,\r\n                \"route\": null,\r\n                \"coords\": { \"lat\": 53.6968527, \"lng\": 23.802495 }\r\n            }\r\n        ]\r\n    }]\r\n```\r\n",
  "readmeFilename": "README.MD",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pasvistelik/public-transport-find-optimal-ways.git"
  },
  "scripts": {
    "build": "npm update && babel src --out-dir lib",
    "prepublish": "npm run build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.7"
}
